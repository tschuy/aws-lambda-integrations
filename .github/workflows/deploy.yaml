name: deploy.webhook
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
env:
  AWS_REGION: us-west-2
jobs:
  stage0:
    name: "stage0 : Terraform"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./stage0
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Validate secrets
        run: 'echo "TODO: skip run if secrets are invalid"'
      - name: Convert PEM to JWK
        run: |
          gem install --user-install json-jwt
          export TF_VAR_okta_jwk_n=`ruby scripts/jwk.rb`
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Add profile credentials to ~/.aws/credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile default
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile default
          aws configure set aws_region ${{ env.AWS_REGION }} --profile default
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -diff
      - name: Terraform Init
        id: init
        env:
          TF_CLI_ARGS: ${{ secrets.TF_CLI_ARGS }}
        run: terraform init
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -input=false -no-color
        continue-on-error: true
        env:
          TF_VAR_indent_webhook_secret: ${{ secrets.INDENT_WEBHOOK_SECRET }}
          TF_VAR_okta_domain: ${{ secrets.OKTA_DOMAIN }}
          TF_VAR_okta_token: ${{ secrets.OKTA_TOKEN }}
          TF_VAR_okta_slack_app_id: ${{ secrets.OKTA_SLACK_APP_ID }}
          TF_VAR_okta_client_id: ${{ secrets.OKTA_CLIENT_ID }}
          TF_VAR_okta_private_key: ${{ secrets.OKTA_PRIVATE_KEY }}
      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: |-
            terraform
            ${{ steps.plan.outputs.stdout }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`${process.env.PLAN}\`\`\`
            </details>
            *Actor: @${{ github.actor }}, Event: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: terraform apply -input=false -auto-approve
        env:
          TF_VAR_indent_webhook_secret: ${{ secrets.INDENT_WEBHOOK_SECRET }}
          TF_VAR_okta_domain: ${{ secrets.OKTA_DOMAIN }}
          TF_VAR_okta_token: ${{ secrets.OKTA_TOKEN }}
          TF_VAR_okta_slack_app_id: ${{ secrets.OKTA_SLACK_APP_ID }}
          TF_VAR_okta_client_id: ${{ secrets.OKTA_CLIENT_ID }}
          TF_VAR_okta_private_key: ${{ secrets.OKTA_PRIVATE_KEY }}
      - name: Terraform Output
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: terraform output
        env:
          TF_VAR_indent_webhook_secret: ${{ secrets.INDENT_WEBHOOK_SECRET }}
          TF_VAR_example_api_key: ${{ secrets.EXAMPLE_API_KEY}}

  stage1:
    name: "stage1 : Terraform"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./stage1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Setup Terraform config
        env:
          TF_CLI_ARGS: ${{ secrets.TF_CLI_ARGS }}
        run: |
          export TF_VAR_remote_bucket_name=${TF_CLI_ARGS:17:-1}
          gem install --user-install json-jwt
          export TF_VAR_okta_jwk_n=`ruby scripts/jwk.rb`
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Add profile credentials to ~/.aws/credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile default
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile default
          aws configure set aws_region ${{ env.AWS_REGION }} --profile default
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -diff
      - name: Terraform Init
        id: init
        env:
          TF_CLI_ARGS: ${{ secrets.TF_CLI_ARGS }}
        run: terraform init
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -input=false -no-color
        continue-on-error: true
        env:
          TF_VAR_indent_webhook_secret: ${{ secrets.INDENT_WEBHOOK_SECRET }}
          TF_VAR_okta_domain: ${{ secrets.OKTA_DOMAIN }}
          TF_VAR_okta_token: ${{ secrets.OKTA_TOKEN }}
          TF_VAR_okta_slack_app_id: ${{ secrets.OKTA_SLACK_APP_ID }}
          TF_VAR_okta_client_id: ${{ secrets.OKTA_CLIENT_ID }}
          TF_VAR_okta_private_key: ${{ secrets.OKTA_PRIVATE_KEY }}
      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: |-
            terraform
            ${{ steps.plan.outputs.stdout }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`${process.env.PLAN}\`\`\`
            </details>
            *Actor: @${{ github.actor }}, Event: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: terraform apply -input=false -auto-approve
        env:
          TF_VAR_indent_webhook_secret: ${{ secrets.INDENT_WEBHOOK_SECRET }}
          TF_VAR_okta_domain: ${{ secrets.OKTA_DOMAIN }}
          TF_VAR_okta_token: ${{ secrets.OKTA_TOKEN }}
          TF_VAR_okta_slack_app_id: ${{ secrets.OKTA_SLACK_APP_ID }}
          TF_VAR_okta_client_id: ${{ secrets.OKTA_CLIENT_ID }}
          TF_VAR_okta_private_key: ${{ secrets.OKTA_PRIVATE_KEY }}
      - name: Terraform Output
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: terraform output
        env:
          TF_VAR_indent_webhook_secret: ${{ secrets.INDENT_WEBHOOK_SECRET }}
          TF_VAR_example_api_key: ${{ secrets.EXAMPLE_API_KEY}}
